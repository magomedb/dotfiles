" Set leader key
let mapleader = ' '

" Use black hole register for delete operations
nnoremap d "_d
nnoremap dd "_dd
xnoremap d "_d

" Ensure the system clipboard (yank buffer) remains intact when pasting
" Always paste from the clipboard explicitly with `"+p` or `"+P`
nnoremap p "+p
nnoremap P "+P

" Optionally, map `y` and `d` to preserve clipboard when deleting
" Avoid overwriting the system clipboard when yanking or deleting
nnoremap y "+y
xnoremap y "+y

" Sync Vim clipboard with OS clipboard
set clipboard^=unnamed,unnamedplus

" Jump between angle brackets
set matchpairs+=<:>

" Enable smart joining of lines
set ideajoin

" Open configuration file
noremap <leader>cc :edit ~/.ideavimrc<cr>

" Source configuration file
noremap <leader>cs :source ~/.ideavimrc<cr>:nohlsearch<cr>

" Highlight search results
set hlsearch

" Remove search highlight
nnoremap <ESC> :nohlsearch<cr>

" Make search case-insensitive by default
set ignorecase

" Enable case-sensitive search when search query is case sensitive
set smartcase

" Enable search while typing
set incsearch

" Expand behavior of move to the beginning of the next word to support camel-case separated variable names
map w [w

" Expand behavior of move to the end of the next word to support camel-case separated variable names
map e ]w

" Expand behavior of move to the beginning of the previous word support camel-case separated variable names
map b [b

" Expand behavior of move to the end of the previous word to support camel-case separated variable names
map ge ]b

" Go to the left split
map <C-h> <C-w>h

" Go to the right split
map <C-l> <C-w>l

" Go to the bottom split
map <C-j> <C-w>j

" Go to the top split
map <C-k> <C-w>k

" Splits
map <leader>wv <Action>(SplitVertically)
map <leader>wh <Action>(SplitHorizontally)
map <leader>ww <Action>(Unsplit)
map <leader>wa <Action>(UnsplitAll)

" Navigation in code
map <leader>sc <Action>(GotoClass)
map <leader>sf <Action>(GotoFile)
map <leader>ss <Action>(GotoSymbol)
map <leader>sa <Action>(GotoAction)

map <leader>gd <Action>(GotoDeclaration)
map <leader>gy <Action>(GotoTypeDeclaration)
map <leader>gi <Action>(GotoTypeImplementation)
map <leader>gt <Action>(GotoTest)
map <leader>gm <Action>(GotoMethod)
map <leader>gl <Action>(GotoLine)

map <leader>uu <Action>(FindUsages)
map <leader>vs <Action>(ViewSource)
map <leader>im <Action>(QuickImplementations)
map <leader>td <Action>(QuickTypeDefinitions)
map <leader>ti <Action>(ExpressionTypeInfo)
map <leader>sh <Action>(ShowHoverInfo)

" Find and replace
map <S-f> <Action>(Find)
map <S-r> <Action>(Replace)
map <leader>ff <Action>(FindInPath)
map <leader>fr <Action>(ReplaceInPath)

" Refactoring
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rr <Action>(Refactorings.QuickListPopupAction)

map <leader>aa <Action>(ShowIntentionActions)
map <leader>sw <Action>(SurroundWith)
map <S-l> <Action>(Forward)
map <S-h> <Action>(Back)

" Tab navigation
map <leader>nn <Action>(NextTab)
map <leader>pp <Action>(PreviousTab)

" Reformat code
map <leader><leader> <Action>(ReformatCode)
map <leader>oi <Action>(OptimizeImports)
map <S-j> <Action>(MoveLineDown)
map <S-k> <Action>(MoveLineUp)

" File management
map <leader>fs <Action>(NewScratchFile)
map <leader>qq <Action>(CloseContent)
map <leader>qa <Action>(CloseAllEditors)
map <leader>nf <Action>(NewFile)
map <leader>nd <Action>(NewDir)
map <leader>re <Action>(RenameFile)
map <leader>of <Action>(OpenFile)
